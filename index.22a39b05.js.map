{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAGrC,AAFgB,EAAM,gBAAgB,CAAC,MAE/B,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,IAAM,EAAU,MAAM,IAAI,CAAC,EAAM,OAAO,CAAC,EAAE,CAAC,IAAI,EAGhD,EAAQ,IAAI,CAAC,SAAC,CAAA,CAAM,CAApB,EACE,IAAI,EAAQ,EAAK,KAAK,CAHP,EAGiB,CAAC,SAAS,CAAC,WAAW,GAClD,EAAQ,EAAK,KAAK,CAJP,EAIiB,CAAC,SAAS,CAAC,WAAW,SAUtD,CARI,AAAa,IANF,GAOb,EAAQ,SAAS,GACjB,EAAQ,SAAS,IACK,IATT,IAUb,EAAQ,WAAW,EAAM,OAAO,CAAC,aAAc,KAC/C,EAAQ,WAAW,EAAM,OAAO,CAAC,aAAc,MAG7C,EAAQ,GACH,GACE,EAAQ,EACV,EAEA,CAEX,GAEA,EAAQ,OAAO,CAAC,SAAC,CAAjB,EAAyB,OAAA,EAAM,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,E,EACxD,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\"table\");\nvar headers = table.querySelectorAll(\"th\");\nheaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        var rowsArr = Array.from(table.tBodies[0].rows);\n        var colIndex = index;\n        rowsArr.sort(function(rowA, rowB) {\n            var cellA = rowA.cells[colIndex].innerText.toLowerCase();\n            var cellB = rowB.cells[colIndex].innerText.toLowerCase();\n            if (colIndex === 2) {\n                cellA = parseInt(cellA);\n                cellB = parseInt(cellB);\n            } else if (colIndex === 3) {\n                cellA = parseFloat(cellA.replace(/[^0-9.-]+/g, \"\"));\n                cellB = parseFloat(cellB.replace(/[^0-9.-]+/g, \"\"));\n            }\n            if (cellA < cellB) return -1;\n            else if (cellA > cellB) return 1;\n            else return 0;\n        });\n        rowsArr.forEach(function(row) {\n            return table.tBodies[0].appendChild(row);\n        });\n    });\n});\n\n//# sourceMappingURL=index.22a39b05.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    const rowsArr = Array.from(table.tBodies[0].rows);\n    const colIndex = index;\n\n    rowsArr.sort((rowA, rowB) => {\n      let cellA = rowA.cells[colIndex].innerText.toLowerCase();\n      let cellB = rowB.cells[colIndex].innerText.toLowerCase();\n\n      if (colIndex === 2) {\n        cellA = parseInt(cellA);\n        cellB = parseInt(cellB);\n      } else if (colIndex === 3) {\n        cellA = parseFloat(cellA.replace(/[^0-9.-]+/g, ''));\n        cellB = parseFloat(cellB.replace(/[^0-9.-]+/g, ''));\n      }\n\n      if (cellA < cellB) {\n        return -1;\n      } else if (cellA > cellB) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n    rowsArr.forEach((row) => table.tBodies[0].appendChild(row));\n  });\n});\n"],"names":["table","document","querySelector","headers","querySelectorAll","forEach","header","index","addEventListener","rowsArr","Array","from","tBodies","rows","sort","rowA","rowB","cellA","cells","innerText","toLowerCase","cellB","colIndex","parseInt","parseFloat","replace","row","appendChild"],"version":3,"file":"index.22a39b05.js.map"}